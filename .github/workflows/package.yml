name: Test and build Python package

on:
  push:
    branches: [ master ]
    tags:
      - v*
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgis/postgis:10-2.5
        env:
          POSTGRES_USER: test
          POSTGRES_DB: test
          POSTGRES_PASSWORD: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8']
        django-series: ['2.2', '3.0']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y gdal-bin
        pip install .[dev] --pre Django==${{ matrix.django-series }}
    - name: Lint with flake8
      run: |
        flake8 pupa
    - name: Test with pytest
      run: |
        ./run-tests.sh
    - name: Calculate test coverage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        coveralls --service=github

  build:
    needs: test
    name: Build package and upload to PyPI
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Build and publish
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        pip install twine wheel
        pip wheel -w dist --no-deps .
        python setup.py sdist
        twine upload dist/*
      continue-on-error: true
